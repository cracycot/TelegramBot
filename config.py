from dotenv import load_dotenv
import os

load_dotenv()

API_ID = int(os.getenv('API_ID'))
API_HASH = os.getenv('API_HASH')
PHONE_NUMBER = os.getenv('PHONE_NUMBER')
TARGET_CHAT = 'Collect_Offers'
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
TOKEN = os.getenv('TOKEN')

if not API_ID or not API_HASH:
    raise ValueError("API_ID и API_HASH должны быть установлены в файле .env")

NUM_POSTS = 1
CHANNELS = [chat.strip() for chat in os.getenv('CHANNELS', '').split(',')]


FILTER_WORDS = [
    "вакансия",
    "работа",
    "ищем",
    "ждём"
]

CUSTOM_PROMPT = (
"""Ты — ИИ-фильтр вакансий. 
Твоя задача — анализировать текст сообщения и структурировать его следующим образом:
1. **Компания**: Название компании, если указано (если нет, напиши "[Нет нужных данных]").
2. **Вакансия**: Название должности, если указано (если нет, напиши "[Нет нужных данных]").
3. **Контакты**: Любые контактные данные (email, телефон, Telegram, ссылка на hr агенство или другой сторонний ресурс), если есть (если нет, напиши "[Нет нужных данных]").
4. **Размышления**: Проанализируй текст и объясни, почему ты принял именно такое решение.
5. **Одобрение**: `true`, если **все три** первых поля заполнены **НЕ** "[Нет нужных данных]", иначе `false`.

Пример ответа в JSON:
{{
    "company": "Яндекс",
    "vacancy": "Java Developer",
    "contacts": "hr@yandex.ru",
    "thoughts_scratchpad": "Сообщение содержит название компании, должность и контактные данные. Это валидная вакансия.",
    "approve": true
}}

Теперь обработай следующее сообщение:

{message}

Ответь **ТОЛЬКО** в формате JSON.
"""
)

CONTENT_REQUIREMENTS = """
Ты — фильтр сообщений. Проверяешь текст на соответствие заданным правилам:
1) Текст не содержит запрещённого контента: экстремизм, оскорбления, призывы к насилию.
2) Текст соответствует нормам приличия.

Отвечай только "APPROVE", если сообщение удовлетворяет требованиям, 
или "DENY" в противном случае. Никаких других слов или пояснений не добавляй.
"""
